<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
         http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
         http://www.springframework.org/schema/context
         http://www.springframework.org/schema/context/spring-context-4.0.xsd
         http://www.springframework.org/schema/aop
         http://www.springframework.org/schema/aop/spring-aop-4.0.xsd
         http://www.springframework.org/schema/tx
     	 http://www.springframework.org/schema/tx/spring-tx-4.0.xsd" >
     	 
    <context:annotation-config />
    <context:component-scan base-package="org.rency.crawler" />
    
    <import resource="classpath*:applicationContext-common-utils.xml"/>
    <import resource="classpath*:applicationContext-common-dal.xml"/>
    
    <bean id="crawlerAspect" class="org.rency.crawler.aspect.CrawlerAspect" />
	<aop:config proxy-target-class="true">
		<aop:pointcut id="crawlerServicePointcut" expression="execution(public * org.rency.crawler.service.impl..*.*(..))" />
		<aop:advisor advice-ref="txAdvice" pointcut-ref="crawlerServicePointcut" /><!-- 事物控制 -->
		<aop:aspect ref="crawlerAspect"><!-- 切面控制 -->
			<aop:before pointcut-ref="crawlerServicePointcut" method="beforeAdvice" />
			<aop:after-returning pointcut-ref="crawlerServicePointcut" method="afterAdvice" />
			<aop:after-throwing pointcut-ref="crawlerServicePointcut" method="afterThrowAdvice" throwing="ex" />
		</aop:aspect>
	</aop:config>
	
	<bean id="propertyConfigurer" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="ignoreResourceNotFound" value="true" />
		<property name="fileEncoding" value="UTF-8" />
		<property name="locations">
			<list>
				<value>classpath:init.properties</value>
				<value>classpath:mail.properties</value>
				<value>classpath:crawler.properties</value>
			</list>
		</property>
	</bean>
	
	<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">
		<property name="driverClassName" value="${db.driver}" />
		<property name="url" value="${db.url}" />
		<property name="username" value="${db.username}" />
		<property name="password" value="${db.passwd}" />
		<property name="maxActive" value="100" />
		<property name="maxIdle" value="30" />
		<property name="maxWait" value="500" />
		<property name="defaultAutoCommit" value="${db.defaultAutoCommit}" />
	</bean>
	
	<!-- 集成mybatis -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="configLocation" value="classpath:mybatis.xml" />
		<property name="mapperLocations" value="classpath*:sqlmap/**/*-Mapper.xml" />
		<property name="typeAliasesPackage" value="org.rency.crawler.beans" />
	</bean>
	
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage" value="org.rency.crawler.repository" />
		<property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"/>
	</bean>
	
	<bean id="sessionFactory" class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
		<property name="dataSource" ref="dataSource"></property>
		<property name="hibernateProperties">
			<props>
    			<prop key="hibernate.dialect">org.hibernate.dialect.MySQLDialect</prop>
				<prop key="hibernate.current_session_context_class">org.springframework.orm.hibernate4.SpringSessionContext</prop>
				<prop key="hibernate.show_sql">true</prop>
				<prop key="hibernate.format_sql">true</prop>
				<prop key="hibernate.hbm2ddl.auto">update</prop>
    		</props>
		</property>
		<property name="packagesToScan">
			<list>
				<value></value>
			</list>
		</property>
	</bean>
	
	<!-- 配置事务 -->  
	<bean id="txManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">  
    	<property name="dataSource" ref="dataSource" />  
	</bean> 
	
	<!-- 爬虫线程池 -->
	<bean id="crawlerTaskExecutor" class="org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor">  
        <property name="corePoolSize" value="${thread.corePoolSize}" />  
        <property name="maxPoolSize" value="${thread.maxPoolSize}" />  
        <property name="queueCapacity" value="${thread.queueCapacity}" />  
        <property name="keepAliveSeconds" value="${thread.keepAliveSeconds}" />  
        <property name="rejectedExecutionHandler">
        	<!-- 拒绝执行任务的具体操作，AbortPolicy表示抛出RejectedExecutionException异常 -->
            <bean class="java.util.concurrent.ThreadPoolExecutor$AbortPolicy" />  
        </property>  
    </bean>
    
    <bean id="httpHandler" class="org.rency.crawler.handler.HttpHandler">
    	<property name="userAgentXmlPath" value="${http.userAgentXmlPath}" />
    	<property name="socketTimeout" value="${http.socket.timeout}" />
    	<property name="connectionTimeout" value="${http.connection.timeout}" />
    </bean>
    
    <!-- 爬虫参数注入 -->
    <bean id="crawlerResources" class="org.rency.crawler.utils.CrawlerResources">
    	<property name="fetchDepth" value="${fetch.depth}" />
    	<property name="fetchFollowRedirects" value="${fetch.followRedirects}" />
    	<property name="fetchPolitenessDelay" value="${fetch.politenessDelay}" />
    	<property name="fetchIncludeHttpsPages" value="${fetch.includeHttpsPages}" />
    	<property name="fetchMaxDownloadSize" value="${fetch.maxDownloadSize}" />
    </bean>
    
    <!-- 爬虫监视器 -->
    <bean id="crawlerMonitor" class="org.rency.crawler.monitor.CrawlerMonitor" />
	
</beans>